name: "Build and Deploy"
on:
  push:
    branches:
      - main
      - master
    paths-ignore:
      - .gitignore
      - README.md
      - LICENSE

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: windows-latest  # Ändern Sie die Ausführungsumgebung auf Windows

    steps:
      - name: Checkout
        uses: actions/checkout@v2  # Verwenden Sie die Version 2 von actions/checkout
        with:
          fetch-depth: 0  # Abholen des gesamten Repository-Verlaufs

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v3  # Konfiguration für GitHub Pages

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3   # Lassen Sie dies unverändert, da Ruby auf Windows unterstützt wird
          bundler-cache: true

      - name: Install Jekyll
        run: gem install jekyll  # Installieren von Jekyll

      - name: Build site
        run: bundle exec jekyll b --config _config.yml -d "_site${{ steps.pages.outputs.base_path }}"  # Ändern Sie "bundle exec jekyll" zu "jekyll"
        env:
          JEKYLL_ENV: "development"

      - name: Upload site artifact
        uses: actions/upload-artifact@v2  # Hochladen des Build-Artefakts
        with:
          name: site
          path: "_site${{ steps.pages.outputs.base_path }}"  # Benennen des Artefakts und Festlegen des Pfads

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: windows-latest  # Ändern Sie die Ausführungsumgebung auf Windows
    needs: build  # Dieser Schritt hängt von "build" ab und wartet auf dessen Abschluss
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
